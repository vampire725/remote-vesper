input {
    beats {
        port => 5044
    }
}

filter {
  # 首先解析 JSON 消息
  json {
    source => "message"
    target => "json_content"
  }

  # 将必要的字段提升到顶层
  mutate {
    rename => {
      "[json_content][level]" => "level"
      "[json_content][traceID]" => "traceID"
      "[json_content][spanID]" => "spanID"
      "[json_content][service][name]" => "service_name"
      "[json_content][spanName]" => "spanName"
    }
    remove_field => ["json_content"]
  }

  # 确保关键字段存在且不为空
  if ![traceID] or [traceID] == "" {
    drop {}
  }

  # 转换字段类型并添加元数据
  mutate {
    convert => {
      "level" => "string"
      "traceID" => "string"
      "spanID" => "string"
      "service_name" => "string"
    }
    add_field => {
      "[@metadata][level]" => "%{level}"
      "[@metadata][traceID]" => "%{traceID}"
      "[@metadata][spanID]" => "%{spanID}"
      "[@metadata][service_name]" => "%{service_name}"
    }
  }

  # 清理不需要的字段
  prune {
    blacklist_names => ["@version", "host", "message"]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "app-logs-%{+YYYY.MM.dd}"
    document_id => "%{[@metadata][traceID]}-%{[@metadata][spanID]}"
    template => "/usr/share/logstash/templates/logs-template.json"
    template_name => "app-logs-template"
    template_overwrite => true
  }

  # 调试输出
  stdout {
    codec => rubydebug {
      metadata => true
    }
  }
}